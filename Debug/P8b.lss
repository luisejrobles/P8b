
P8b.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800200  000005ea  0000067e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000084  00800228  00800228  000006a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000718  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010ef  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d0e  00000000  00000000  0000187f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005dd  00000000  00000000  0000258d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002b6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ed  00000000  00000000  00002cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000771  00000000  00000000  000032dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003a4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	08 c2       	rjmp	.+1040   	; 0x476 <__vector_25>
  66:	00 00       	nop
  68:	4d c2       	rjmp	.+1178   	; 0x504 <__vector_26>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ee       	ldi	r30, 0xEA	; 234
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 32       	cpi	r26, 0x28	; 40
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e2       	ldi	r26, 0x28	; 40
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 3a       	cpi	r26, 0xAC	; 172
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	7a d1       	rcall	.+756    	; 0x414 <main>
 120:	62 c2       	rjmp	.+1220   	; 0x5e6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <itoa>:
	if( !(BUFFER_FULL(recepcion)))
	{
		return 1;
	}
	return 0;
}
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	fc 01       	movw	r30, r24
 12e:	9b 01       	movw	r18, r22
 130:	c0 e0       	ldi	r28, 0x00	; 0
 132:	d0 e0       	ldi	r29, 0x00	; 0
 134:	04 2f       	mov	r16, r20
 136:	10 e0       	ldi	r17, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <itoa+0x1a>
 13a:	ec 01       	movw	r28, r24
 13c:	fd 01       	movw	r30, r26
 13e:	c9 01       	movw	r24, r18
 140:	b8 01       	movw	r22, r16
 142:	3d d2       	rcall	.+1146   	; 0x5be <__udivmodhi4>
 144:	26 2f       	mov	r18, r22
 146:	37 2f       	mov	r19, r23
 148:	8a 30       	cpi	r24, 0x0A	; 10
 14a:	91 05       	cpc	r25, r1
 14c:	10 f0       	brcs	.+4      	; 0x152 <itoa+0x2e>
 14e:	89 5c       	subi	r24, 0xC9	; 201
 150:	01 c0       	rjmp	.+2      	; 0x154 <itoa+0x30>
 152:	80 5d       	subi	r24, 0xD0	; 208
 154:	df 01       	movw	r26, r30
 156:	11 96       	adiw	r26, 0x01	; 1
 158:	80 83       	st	Z, r24
 15a:	ce 01       	movw	r24, r28
 15c:	01 96       	adiw	r24, 0x01	; 1
 15e:	21 15       	cp	r18, r1
 160:	31 05       	cpc	r19, r1
 162:	59 f7       	brne	.-42     	; 0x13a <itoa+0x16>
 164:	11 82       	std	Z+1, r1	; 0x01
 166:	a8 1b       	sub	r26, r24
 168:	b9 0b       	sbc	r27, r25
 16a:	20 97       	sbiw	r28, 0x00	; 0
 16c:	99 f0       	breq	.+38     	; 0x194 <itoa+0x70>
 16e:	fd 01       	movw	r30, r26
 170:	a8 0f       	add	r26, r24
 172:	b9 1f       	adc	r27, r25
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	20 81       	ld	r18, Z
 17a:	3e 91       	ld	r19, -X
 17c:	23 17       	cp	r18, r19
 17e:	11 f0       	breq	.+4      	; 0x184 <itoa+0x60>
 180:	30 83       	st	Z, r19
 182:	2c 93       	st	X, r18
 184:	01 96       	adiw	r24, 0x01	; 1
 186:	31 96       	adiw	r30, 0x01	; 1
 188:	9e 01       	movw	r18, r28
 18a:	28 1b       	sub	r18, r24
 18c:	39 0b       	sbc	r19, r25
 18e:	82 17       	cp	r24, r18
 190:	93 07       	cpc	r25, r19
 192:	90 f3       	brcs	.-28     	; 0x178 <itoa+0x54>
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	1f 91       	pop	r17
 19a:	0f 91       	pop	r16
 19c:	08 95       	ret

0000019e <BUFFER_INIT>:
 19e:	ea ea       	ldi	r30, 0xAA	; 170
 1a0:	f2 e0       	ldi	r31, 0x02	; 2
 1a2:	80 81       	ld	r24, Z
 1a4:	80 7c       	andi	r24, 0xC0	; 192
 1a6:	80 83       	st	Z, r24
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 73       	andi	r24, 0x3F	; 63
 1ac:	80 83       	st	Z, r24
 1ae:	81 81       	ldd	r24, Z+1	; 0x01
 1b0:	80 7f       	andi	r24, 0xF0	; 240
 1b2:	81 83       	std	Z+1, r24	; 0x01
 1b4:	e8 e6       	ldi	r30, 0x68	; 104
 1b6:	f2 e0       	ldi	r31, 0x02	; 2
 1b8:	80 81       	ld	r24, Z
 1ba:	80 7c       	andi	r24, 0xC0	; 192
 1bc:	80 83       	st	Z, r24
 1be:	80 81       	ld	r24, Z
 1c0:	8f 73       	andi	r24, 0x3F	; 63
 1c2:	80 83       	st	Z, r24
 1c4:	81 81       	ldd	r24, Z+1	; 0x01
 1c6:	80 7f       	andi	r24, 0xF0	; 240
 1c8:	81 83       	std	Z+1, r24	; 0x01
 1ca:	08 95       	ret

000001cc <UART0_Init>:
 1cc:	89 2b       	or	r24, r25
 1ce:	39 f4       	brne	.+14     	; 0x1de <UART0_Init+0x12>
 1d0:	8f ec       	ldi	r24, 0xCF	; 207
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 1d8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 1dc:	06 c0       	rjmp	.+12     	; 0x1ea <UART0_Init+0x1e>
 1de:	87 e6       	ldi	r24, 0x67	; 103
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 1e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 1ea:	82 e0       	ldi	r24, 0x02	; 2
 1ec:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 1f0:	8b ef       	ldi	r24, 0xFB	; 251
 1f2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 1f6:	86 e0       	ldi	r24, 0x06	; 6
 1f8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 1fc:	08 95       	ret

000001fe <UART0_putchar>:
 1fe:	ea ea       	ldi	r30, 0xAA	; 170
 200:	f2 e0       	ldi	r31, 0x02	; 2
 202:	ab ea       	ldi	r26, 0xAB	; 171
 204:	b2 e0       	ldi	r27, 0x02	; 2
 206:	40 81       	ld	r20, Z
 208:	4f 73       	andi	r20, 0x3F	; 63
 20a:	20 81       	ld	r18, Z
 20c:	92 2f       	mov	r25, r18
 20e:	92 95       	swap	r25
 210:	96 95       	lsr	r25
 212:	96 95       	lsr	r25
 214:	93 70       	andi	r25, 0x03	; 3
 216:	2c 91       	ld	r18, X
 218:	2f 70       	andi	r18, 0x0F	; 15
 21a:	22 0f       	add	r18, r18
 21c:	22 0f       	add	r18, r18
 21e:	29 2b       	or	r18, r25
 220:	50 e0       	ldi	r21, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	21 50       	subi	r18, 0x01	; 1
 226:	31 09       	sbc	r19, r1
 228:	42 17       	cp	r20, r18
 22a:	53 07       	cpc	r21, r19
 22c:	61 f3       	breq	.-40     	; 0x206 <UART0_putchar+0x8>
 22e:	ea ea       	ldi	r30, 0xAA	; 170
 230:	f2 e0       	ldi	r31, 0x02	; 2
 232:	30 81       	ld	r19, Z
 234:	3f 73       	andi	r19, 0x3F	; 63
 236:	90 81       	ld	r25, Z
 238:	29 2f       	mov	r18, r25
 23a:	22 95       	swap	r18
 23c:	26 95       	lsr	r18
 23e:	26 95       	lsr	r18
 240:	23 70       	andi	r18, 0x03	; 3
 242:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <transmision+0x41>
 246:	9f 70       	andi	r25, 0x0F	; 15
 248:	99 0f       	add	r25, r25
 24a:	99 0f       	add	r25, r25
 24c:	92 2b       	or	r25, r18
 24e:	39 13       	cpse	r19, r25
 250:	15 c0       	rjmp	.+42     	; 0x27c <UART0_putchar+0x7e>
 252:	df 01       	movw	r26, r30
 254:	e0 81       	ld	r30, Z
 256:	ef 73       	andi	r30, 0x3F	; 63
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	9e 0f       	add	r25, r30
 25c:	29 2f       	mov	r18, r25
 25e:	2f 73       	andi	r18, 0x3F	; 63
 260:	9c 91       	ld	r25, X
 262:	90 7c       	andi	r25, 0xC0	; 192
 264:	92 2b       	or	r25, r18
 266:	9c 93       	st	X, r25
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	e6 59       	subi	r30, 0x96	; 150
 26c:	fd 4f       	sbci	r31, 0xFD	; 253
 26e:	80 83       	st	Z, r24
 270:	e1 ec       	ldi	r30, 0xC1	; 193
 272:	f0 e0       	ldi	r31, 0x00	; 0
 274:	80 81       	ld	r24, Z
 276:	80 62       	ori	r24, 0x20	; 32
 278:	80 83       	st	Z, r24
 27a:	08 95       	ret
 27c:	aa ea       	ldi	r26, 0xAA	; 170
 27e:	b2 e0       	ldi	r27, 0x02	; 2
 280:	ec 91       	ld	r30, X
 282:	ef 73       	andi	r30, 0x3F	; 63
 284:	91 e0       	ldi	r25, 0x01	; 1
 286:	9e 0f       	add	r25, r30
 288:	29 2f       	mov	r18, r25
 28a:	2f 73       	andi	r18, 0x3F	; 63
 28c:	9c 91       	ld	r25, X
 28e:	90 7c       	andi	r25, 0xC0	; 192
 290:	92 2b       	or	r25, r18
 292:	9c 93       	st	X, r25
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	e6 59       	subi	r30, 0x96	; 150
 298:	fd 4f       	sbci	r31, 0xFD	; 253
 29a:	80 83       	st	Z, r24
 29c:	08 95       	ret

0000029e <UART0_puts>:
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	ec 01       	movw	r28, r24
 2a4:	88 81       	ld	r24, Y
 2a6:	88 23       	and	r24, r24
 2a8:	29 f0       	breq	.+10     	; 0x2b4 <UART0_puts+0x16>
 2aa:	21 96       	adiw	r28, 0x01	; 1
 2ac:	a8 df       	rcall	.-176    	; 0x1fe <UART0_putchar>
 2ae:	89 91       	ld	r24, Y+
 2b0:	81 11       	cpse	r24, r1
 2b2:	fc cf       	rjmp	.-8      	; 0x2ac <UART0_puts+0xe>
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	08 95       	ret

000002ba <UART0_getchar>:
 2ba:	e8 e6       	ldi	r30, 0x68	; 104
 2bc:	f2 e0       	ldi	r31, 0x02	; 2
 2be:	a9 e6       	ldi	r26, 0x69	; 105
 2c0:	b2 e0       	ldi	r27, 0x02	; 2
 2c2:	20 81       	ld	r18, Z
 2c4:	2f 73       	andi	r18, 0x3F	; 63
 2c6:	80 81       	ld	r24, Z
 2c8:	98 2f       	mov	r25, r24
 2ca:	92 95       	swap	r25
 2cc:	96 95       	lsr	r25
 2ce:	96 95       	lsr	r25
 2d0:	93 70       	andi	r25, 0x03	; 3
 2d2:	8c 91       	ld	r24, X
 2d4:	8f 70       	andi	r24, 0x0F	; 15
 2d6:	88 0f       	add	r24, r24
 2d8:	88 0f       	add	r24, r24
 2da:	89 2b       	or	r24, r25
 2dc:	28 17       	cp	r18, r24
 2de:	89 f3       	breq	.-30     	; 0x2c2 <UART0_getchar+0x8>
 2e0:	a8 e6       	ldi	r26, 0x68	; 104
 2e2:	b2 e0       	ldi	r27, 0x02	; 2
 2e4:	ec 91       	ld	r30, X
 2e6:	8e 2f       	mov	r24, r30
 2e8:	82 95       	swap	r24
 2ea:	86 95       	lsr	r24
 2ec:	86 95       	lsr	r24
 2ee:	83 70       	andi	r24, 0x03	; 3
 2f0:	e0 91 69 02 	lds	r30, 0x0269	; 0x800269 <__data_end+0x41>
 2f4:	ef 70       	andi	r30, 0x0F	; 15
 2f6:	ee 0f       	add	r30, r30
 2f8:	ee 0f       	add	r30, r30
 2fa:	e8 2b       	or	r30, r24
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	8e 0f       	add	r24, r30
 300:	8f 73       	andi	r24, 0x3F	; 63
 302:	28 2f       	mov	r18, r24
 304:	22 95       	swap	r18
 306:	22 0f       	add	r18, r18
 308:	22 0f       	add	r18, r18
 30a:	20 7c       	andi	r18, 0xC0	; 192
 30c:	9c 91       	ld	r25, X
 30e:	9f 73       	andi	r25, 0x3F	; 63
 310:	92 2b       	or	r25, r18
 312:	9c 93       	st	X, r25
 314:	86 95       	lsr	r24
 316:	86 95       	lsr	r24
 318:	11 96       	adiw	r26, 0x01	; 1
 31a:	9c 91       	ld	r25, X
 31c:	11 97       	sbiw	r26, 0x01	; 1
 31e:	90 7f       	andi	r25, 0xF0	; 240
 320:	89 2b       	or	r24, r25
 322:	11 96       	adiw	r26, 0x01	; 1
 324:	8c 93       	st	X, r24
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	e8 5d       	subi	r30, 0xD8	; 216
 32a:	fd 4f       	sbci	r31, 0xFD	; 253
 32c:	80 81       	ld	r24, Z
 32e:	08 95       	ret

00000330 <UART0_gets>:
 330:	ef 92       	push	r14
 332:	ff 92       	push	r15
 334:	0f 93       	push	r16
 336:	1f 93       	push	r17
 338:	cf 93       	push	r28
 33a:	7c 01       	movw	r14, r24
 33c:	00 e0       	ldi	r16, 0x00	; 0
 33e:	10 e0       	ldi	r17, 0x00	; 0
 340:	bc df       	rcall	.-136    	; 0x2ba <UART0_getchar>
 342:	c8 2f       	mov	r28, r24
 344:	03 31       	cpi	r16, 0x13	; 19
 346:	11 05       	cpc	r17, r1
 348:	68 f4       	brcc	.+26     	; 0x364 <UART0_gets+0x34>
 34a:	88 30       	cpi	r24, 0x08	; 8
 34c:	69 f0       	breq	.+26     	; 0x368 <UART0_gets+0x38>
 34e:	8d 30       	cpi	r24, 0x0D	; 13
 350:	f1 f0       	breq	.+60     	; 0x38e <UART0_gets+0x5e>
 352:	55 df       	rcall	.-342    	; 0x1fe <UART0_putchar>
 354:	f7 01       	movw	r30, r14
 356:	c0 83       	st	Z, r28
 358:	0f 5f       	subi	r16, 0xFF	; 255
 35a:	1f 4f       	sbci	r17, 0xFF	; 255
 35c:	c7 01       	movw	r24, r14
 35e:	01 96       	adiw	r24, 0x01	; 1
 360:	7c 01       	movw	r14, r24
 362:	ee cf       	rjmp	.-36     	; 0x340 <UART0_gets+0x10>
 364:	88 30       	cpi	r24, 0x08	; 8
 366:	89 f4       	brne	.+34     	; 0x38a <UART0_gets+0x5a>
 368:	01 15       	cp	r16, r1
 36a:	11 05       	cpc	r17, r1
 36c:	49 f3       	breq	.-46     	; 0x340 <UART0_gets+0x10>
 36e:	88 e0       	ldi	r24, 0x08	; 8
 370:	46 df       	rcall	.-372    	; 0x1fe <UART0_putchar>
 372:	80 e2       	ldi	r24, 0x20	; 32
 374:	44 df       	rcall	.-376    	; 0x1fe <UART0_putchar>
 376:	88 e0       	ldi	r24, 0x08	; 8
 378:	42 df       	rcall	.-380    	; 0x1fe <UART0_putchar>
 37a:	f7 01       	movw	r30, r14
 37c:	10 82       	st	Z, r1
 37e:	01 50       	subi	r16, 0x01	; 1
 380:	11 09       	sbc	r17, r1
 382:	c7 01       	movw	r24, r14
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	7c 01       	movw	r14, r24
 388:	db cf       	rjmp	.-74     	; 0x340 <UART0_gets+0x10>
 38a:	8d 30       	cpi	r24, 0x0D	; 13
 38c:	c9 f6       	brne	.-78     	; 0x340 <UART0_gets+0x10>
 38e:	f7 01       	movw	r30, r14
 390:	10 82       	st	Z, r1
 392:	cf 91       	pop	r28
 394:	1f 91       	pop	r17
 396:	0f 91       	pop	r16
 398:	ff 90       	pop	r15
 39a:	ef 90       	pop	r14
 39c:	08 95       	ret

0000039e <atoi>:
unsigned int atoi(char *str)
{
	unsigned int num = 0, exp = 1, val, count = 0;
	//contando digitos en la cadena============
	while(*str)
 39e:	fc 01       	movw	r30, r24
 3a0:	20 81       	ld	r18, Z
 3a2:	22 23       	and	r18, r18
 3a4:	89 f1       	breq	.+98     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3a6:	31 96       	adiw	r30, 0x01	; 1
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	01 c0       	rjmp	.+2      	; 0x3b0 <atoi+0x12>
 3ae:	fa 01       	movw	r30, r20
	{
		str++;
 3b0:	bf 01       	movw	r22, r30
		count++;
 3b2:	01 96       	adiw	r24, 0x01	; 1
 3b4:	af 01       	movw	r20, r30
 3b6:	4f 5f       	subi	r20, 0xFF	; 255
 3b8:	5f 4f       	sbci	r21, 0xFF	; 255
}
unsigned int atoi(char *str)
{
	unsigned int num = 0, exp = 1, val, count = 0;
	//contando digitos en la cadena============
	while(*str)
 3ba:	20 81       	ld	r18, Z
 3bc:	21 11       	cpse	r18, r1
 3be:	f7 cf       	rjmp	.-18     	; 0x3ae <atoi+0x10>
	{
		str++;
		count++;
	}
	str--;	//no tomando en cuenta '\0'
	while(count != 0)
 3c0:	00 97       	sbiw	r24, 0x00	; 0
 3c2:	29 f1       	breq	.+74     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3c4:	68 1b       	sub	r22, r24
 3c6:	79 0b       	sbc	r23, r25
 3c8:	21 e0       	ldi	r18, 0x01	; 1
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	90 e0       	ldi	r25, 0x00	; 0
	{
		val = *str--;	//tomando el valor
 3d0:	42 91       	ld	r20, -Z
 3d2:	50 e0       	ldi	r21, 0x00	; 0
		val = val - '0';	//obteniendo valor crudo
		num = num + (val * exp);	//almacenando valor crudo*exp en num
 3d4:	40 53       	subi	r20, 0x30	; 48
 3d6:	51 09       	sbc	r21, r1
 3d8:	42 9f       	mul	r20, r18
 3da:	d0 01       	movw	r26, r0
 3dc:	43 9f       	mul	r20, r19
 3de:	b0 0d       	add	r27, r0
 3e0:	52 9f       	mul	r21, r18
 3e2:	b0 0d       	add	r27, r0
 3e4:	11 24       	eor	r1, r1
 3e6:	8a 0f       	add	r24, r26
 3e8:	9b 1f       	adc	r25, r27
		exp = exp*10;
 3ea:	a9 01       	movw	r20, r18
 3ec:	44 0f       	add	r20, r20
 3ee:	55 1f       	adc	r21, r21
 3f0:	22 0f       	add	r18, r18
 3f2:	33 1f       	adc	r19, r19
 3f4:	22 0f       	add	r18, r18
 3f6:	33 1f       	adc	r19, r19
 3f8:	22 0f       	add	r18, r18
 3fa:	33 1f       	adc	r19, r19
 3fc:	24 0f       	add	r18, r20
 3fe:	35 1f       	adc	r19, r21
	{
		str++;
		count++;
	}
	str--;	//no tomando en cuenta '\0'
	while(count != 0)
 400:	e6 17       	cp	r30, r22
 402:	f7 07       	cpc	r31, r23
 404:	29 f7       	brne	.-54     	; 0x3d0 <atoi+0x32>
 406:	08 95       	ret
	}
	return 0;
}
unsigned int atoi(char *str)
{
	unsigned int num = 0, exp = 1, val, count = 0;
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	08 95       	ret
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	90 e0       	ldi	r25, 0x00	; 0
		num = num + (val * exp);	//almacenando valor crudo*exp en num
		exp = exp*10;
		count--;
	}
	return num;
}
 412:	08 95       	ret

00000414 <main>:
ring_buffer_t transmision;
ring_buffer_t recepcion;


int main(void)
{	
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62
 41c:	64 97       	sbiw	r28, 0x14	; 20
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	f8 94       	cli
 422:	de bf       	out	0x3e, r29	; 62
 424:	0f be       	out	0x3f, r0	; 63
 426:	cd bf       	out	0x3d, r28	; 61
	char cad[20];
	uint16_t num;
	
	UART0_Init(0);
 428:	80 e0       	ldi	r24, 0x00	; 0
 42a:	90 e0       	ldi	r25, 0x00	; 0
	sei();
 42c:	cf de       	rcall	.-610    	; 0x1cc <UART0_Init>
 42e:	78 94       	sei
 430:	b6 de       	rcall	.-660    	; 0x19e <BUFFER_INIT>
 432:	43 df       	rcall	.-378    	; 0x2ba <UART0_getchar>
 434:	80 e0       	ldi	r24, 0x00	; 0
 436:	92 e0       	ldi	r25, 0x02	; 2
 438:	32 df       	rcall	.-412    	; 0x29e <UART0_puts>
 43a:	ce 01       	movw	r24, r28
 43c:	01 96       	adiw	r24, 0x01	; 1
 43e:	78 df       	rcall	.-272    	; 0x330 <UART0_gets>
 440:	ce 01       	movw	r24, r28
 442:	01 96       	adiw	r24, 0x01	; 1
 444:	ac df       	rcall	.-168    	; 0x39e <atoi>
 446:	8c 01       	movw	r16, r24
 448:	4a e0       	ldi	r20, 0x0A	; 10
 44a:	bc 01       	movw	r22, r24
 44c:	ce 01       	movw	r24, r28
 44e:	01 96       	adiw	r24, 0x01	; 1
 450:	69 de       	rcall	.-814    	; 0x124 <itoa>
 452:	89 e1       	ldi	r24, 0x19	; 25
 454:	92 e0       	ldi	r25, 0x02	; 2
 456:	23 df       	rcall	.-442    	; 0x29e <UART0_puts>
 458:	ce 01       	movw	r24, r28
 45a:	01 96       	adiw	r24, 0x01	; 1
 45c:	20 df       	rcall	.-448    	; 0x29e <UART0_puts>
 45e:	42 e0       	ldi	r20, 0x02	; 2
 460:	b8 01       	movw	r22, r16
 462:	ce 01       	movw	r24, r28
 464:	01 96       	adiw	r24, 0x01	; 1
 466:	5e de       	rcall	.-836    	; 0x124 <itoa>
 468:	80 e2       	ldi	r24, 0x20	; 32
 46a:	92 e0       	ldi	r25, 0x02	; 2
 46c:	18 df       	rcall	.-464    	; 0x29e <UART0_puts>
 46e:	ce 01       	movw	r24, r28
 470:	01 96       	adiw	r24, 0x01	; 1
 472:	15 df       	rcall	.-470    	; 0x29e <UART0_puts>
 474:	de cf       	rjmp	.-68     	; 0x432 <main+0x1e>

00000476 <__vector_25>:
 476:	1f 92       	push	r1
 478:	0f 92       	push	r0
 47a:	0f b6       	in	r0, 0x3f	; 63
 47c:	0f 92       	push	r0
 47e:	11 24       	eor	r1, r1
 480:	0b b6       	in	r0, 0x3b	; 59
 482:	0f 92       	push	r0
 484:	2f 93       	push	r18
 486:	3f 93       	push	r19
 488:	8f 93       	push	r24
 48a:	9f 93       	push	r25
 48c:	af 93       	push	r26
 48e:	bf 93       	push	r27
 490:	ef 93       	push	r30
 492:	ff 93       	push	r31
 494:	e8 e6       	ldi	r30, 0x68	; 104
 496:	f2 e0       	ldi	r31, 0x02	; 2
 498:	a9 e6       	ldi	r26, 0x69	; 105
 49a:	b2 e0       	ldi	r27, 0x02	; 2
 49c:	20 81       	ld	r18, Z
 49e:	2f 73       	andi	r18, 0x3F	; 63
 4a0:	80 81       	ld	r24, Z
 4a2:	98 2f       	mov	r25, r24
 4a4:	92 95       	swap	r25
 4a6:	96 95       	lsr	r25
 4a8:	96 95       	lsr	r25
 4aa:	93 70       	andi	r25, 0x03	; 3
 4ac:	8c 91       	ld	r24, X
 4ae:	8f 70       	andi	r24, 0x0F	; 15
 4b0:	88 0f       	add	r24, r24
 4b2:	88 0f       	add	r24, r24
 4b4:	89 2b       	or	r24, r25
 4b6:	30 e0       	ldi	r19, 0x00	; 0
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	01 97       	sbiw	r24, 0x01	; 1
 4bc:	28 17       	cp	r18, r24
 4be:	39 07       	cpc	r19, r25
 4c0:	69 f3       	breq	.-38     	; 0x49c <__vector_25+0x26>
 4c2:	a8 e6       	ldi	r26, 0x68	; 104
 4c4:	b2 e0       	ldi	r27, 0x02	; 2
 4c6:	ec 91       	ld	r30, X
 4c8:	ef 73       	andi	r30, 0x3F	; 63
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	8e 0f       	add	r24, r30
 4ce:	98 2f       	mov	r25, r24
 4d0:	9f 73       	andi	r25, 0x3F	; 63
 4d2:	8c 91       	ld	r24, X
 4d4:	80 7c       	andi	r24, 0xC0	; 192
 4d6:	89 2b       	or	r24, r25
 4d8:	8c 93       	st	X, r24
 4da:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	e8 5d       	subi	r30, 0xD8	; 216
 4e2:	fd 4f       	sbci	r31, 0xFD	; 253
 4e4:	80 83       	st	Z, r24
 4e6:	ff 91       	pop	r31
 4e8:	ef 91       	pop	r30
 4ea:	bf 91       	pop	r27
 4ec:	af 91       	pop	r26
 4ee:	9f 91       	pop	r25
 4f0:	8f 91       	pop	r24
 4f2:	3f 91       	pop	r19
 4f4:	2f 91       	pop	r18
 4f6:	0f 90       	pop	r0
 4f8:	0b be       	out	0x3b, r0	; 59
 4fa:	0f 90       	pop	r0
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	0f 90       	pop	r0
 500:	1f 90       	pop	r1
 502:	18 95       	reti

00000504 <__vector_26>:
 504:	1f 92       	push	r1
 506:	0f 92       	push	r0
 508:	0f b6       	in	r0, 0x3f	; 63
 50a:	0f 92       	push	r0
 50c:	11 24       	eor	r1, r1
 50e:	0b b6       	in	r0, 0x3b	; 59
 510:	0f 92       	push	r0
 512:	2f 93       	push	r18
 514:	8f 93       	push	r24
 516:	9f 93       	push	r25
 518:	af 93       	push	r26
 51a:	bf 93       	push	r27
 51c:	ef 93       	push	r30
 51e:	ff 93       	push	r31
 520:	ea ea       	ldi	r30, 0xAA	; 170
 522:	f2 e0       	ldi	r31, 0x02	; 2
 524:	20 81       	ld	r18, Z
 526:	2f 73       	andi	r18, 0x3F	; 63
 528:	80 81       	ld	r24, Z
 52a:	98 2f       	mov	r25, r24
 52c:	92 95       	swap	r25
 52e:	96 95       	lsr	r25
 530:	96 95       	lsr	r25
 532:	93 70       	andi	r25, 0x03	; 3
 534:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <transmision+0x41>
 538:	8f 70       	andi	r24, 0x0F	; 15
 53a:	88 0f       	add	r24, r24
 53c:	88 0f       	add	r24, r24
 53e:	89 2b       	or	r24, r25
 540:	28 13       	cpse	r18, r24
 542:	06 c0       	rjmp	.+12     	; 0x550 <__vector_26+0x4c>
 544:	e1 ec       	ldi	r30, 0xC1	; 193
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	80 81       	ld	r24, Z
 54a:	8f 7d       	andi	r24, 0xDF	; 223
 54c:	80 83       	st	Z, r24
 54e:	29 c0       	rjmp	.+82     	; 0x5a2 <__vector_26+0x9e>
 550:	aa ea       	ldi	r26, 0xAA	; 170
 552:	b2 e0       	ldi	r27, 0x02	; 2
 554:	ec 91       	ld	r30, X
 556:	8e 2f       	mov	r24, r30
 558:	82 95       	swap	r24
 55a:	86 95       	lsr	r24
 55c:	86 95       	lsr	r24
 55e:	83 70       	andi	r24, 0x03	; 3
 560:	e0 91 ab 02 	lds	r30, 0x02AB	; 0x8002ab <transmision+0x41>
 564:	ef 70       	andi	r30, 0x0F	; 15
 566:	ee 0f       	add	r30, r30
 568:	ee 0f       	add	r30, r30
 56a:	e8 2b       	or	r30, r24
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	8e 0f       	add	r24, r30
 570:	8f 73       	andi	r24, 0x3F	; 63
 572:	28 2f       	mov	r18, r24
 574:	22 95       	swap	r18
 576:	22 0f       	add	r18, r18
 578:	22 0f       	add	r18, r18
 57a:	20 7c       	andi	r18, 0xC0	; 192
 57c:	9c 91       	ld	r25, X
 57e:	9f 73       	andi	r25, 0x3F	; 63
 580:	92 2b       	or	r25, r18
 582:	9c 93       	st	X, r25
 584:	86 95       	lsr	r24
 586:	86 95       	lsr	r24
 588:	11 96       	adiw	r26, 0x01	; 1
 58a:	9c 91       	ld	r25, X
 58c:	11 97       	sbiw	r26, 0x01	; 1
 58e:	90 7f       	andi	r25, 0xF0	; 240
 590:	89 2b       	or	r24, r25
 592:	11 96       	adiw	r26, 0x01	; 1
 594:	8c 93       	st	X, r24
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	e6 59       	subi	r30, 0x96	; 150
 59a:	fd 4f       	sbci	r31, 0xFD	; 253
 59c:	80 81       	ld	r24, Z
 59e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 5a2:	ff 91       	pop	r31
 5a4:	ef 91       	pop	r30
 5a6:	bf 91       	pop	r27
 5a8:	af 91       	pop	r26
 5aa:	9f 91       	pop	r25
 5ac:	8f 91       	pop	r24
 5ae:	2f 91       	pop	r18
 5b0:	0f 90       	pop	r0
 5b2:	0b be       	out	0x3b, r0	; 59
 5b4:	0f 90       	pop	r0
 5b6:	0f be       	out	0x3f, r0	; 63
 5b8:	0f 90       	pop	r0
 5ba:	1f 90       	pop	r1
 5bc:	18 95       	reti

000005be <__udivmodhi4>:
 5be:	aa 1b       	sub	r26, r26
 5c0:	bb 1b       	sub	r27, r27
 5c2:	51 e1       	ldi	r21, 0x11	; 17
 5c4:	07 c0       	rjmp	.+14     	; 0x5d4 <__udivmodhi4_ep>

000005c6 <__udivmodhi4_loop>:
 5c6:	aa 1f       	adc	r26, r26
 5c8:	bb 1f       	adc	r27, r27
 5ca:	a6 17       	cp	r26, r22
 5cc:	b7 07       	cpc	r27, r23
 5ce:	10 f0       	brcs	.+4      	; 0x5d4 <__udivmodhi4_ep>
 5d0:	a6 1b       	sub	r26, r22
 5d2:	b7 0b       	sbc	r27, r23

000005d4 <__udivmodhi4_ep>:
 5d4:	88 1f       	adc	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	5a 95       	dec	r21
 5da:	a9 f7       	brne	.-22     	; 0x5c6 <__udivmodhi4_loop>
 5dc:	80 95       	com	r24
 5de:	90 95       	com	r25
 5e0:	bc 01       	movw	r22, r24
 5e2:	cd 01       	movw	r24, r26
 5e4:	08 95       	ret

000005e6 <_exit>:
 5e6:	f8 94       	cli

000005e8 <__stop_program>:
 5e8:	ff cf       	rjmp	.-2      	; 0x5e8 <__stop_program>
